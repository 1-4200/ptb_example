import {SuiClient} from "@mysten/sui.js/client";
import {fromB64} from "@mysten/bcs";
import {Ed25519Keypair} from "@mysten/sui.js/keypairs/ed25519";
import {TransactionBlock} from "@mysten/sui.js/transactions"

export const client = new SuiClient({url: "https://rpc-testnet.suiscan.xyz:443"});

// you can find the raw private key in the file ~/.sui/sui_config/sui.keystore
// which is generated by the command `sui client new-address`
export const raw = fromB64(<string>Bun.env.B64_PRIVATE_KEY);
export const keypair = Ed25519Keypair.fromSecretKey(raw.slice(1));

export const packageId = <string>Bun.env.PACKAGE_ID;
export const moduleName = <string>Bun.env.MODULE_NAME;

// This is the number of how many NFTs you want to mint and send
export const NUMBER_OF_MINT = 1023;
export const recipients = Array.from({length: NUMBER_OF_MINT}, (_, i) => i + 1).map(i => {
    return `0x${i.toString(16).padStart(64, '0')}`;
});

export const numbers = Array.from({length: NUMBER_OF_MINT}, (_, i) => i + 1);

console.assert(recipients.length === NUMBER_OF_MINT, "recipients.length !== amount");

export async function executeTxb(txb: TransactionBlock) {
    const tx = await client.signAndExecuteTransactionBlock({
        signer: keypair,
        transactionBlock: txb,
        options: {
            showObjectChanges: true,
        }
    });
    const resp = await client.waitForTransactionBlock({
        digest: tx.digest,
        options: {
            showObjectChanges: true,
        }
    });
    console.log(resp);
    console.log(`digest: ${tx.digest}`);
}
